/*
 * Copyright 2015 Karel Hübl <karel.huebl@gmail.com>.
 *
 * This file is part of disl.
 *
 * Disl is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Disl is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Foobar.  If not, see <http://www.gnu.org/licenses/>.
 */

//License plugin temporarily disabled due to https://github.com/hierynomus/license-gradle-plugin/issues/191
//TODO: Enable once fixed.
 /*plugins {
	 id "com.github.hierynomus.license" version "0.15.0"
 }*/

apply plugin: 'idea'
apply plugin: 'groovy'
apply plugin: 'java-library-distribution'
apply plugin: 'maven-publish'
apply plugin: 'signing'

project.group='com.github.kaja78'
project.version="1.1.3-SNAPSHOT"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { mavenCentral() }

dependencies {
	api 'org.codehaus.groovy:groovy-all:3.0.7'
	api 'org.slf4j:slf4j-api:1.7.21'
	implementation 'junit:junit'
	testImplementation 'org.hsqldb:hsqldb:2.3.2'
	testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.21'
	testRuntimeOnly fileTree(dir: 'lib', include: '*.jar')
}



task sourcesJar(type: Jar, dependsOn: classes) {
	classifier 'sources'
	from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
	archiveClassifier = 'javadoc'
	from groovydoc
}
 
artifacts {
	archives groovydocJar, sourcesJar
}

if (dislSigning) {
	signing {
		sign configurations.archives
	}
}

String getVersionName() {
	'git describe --tags'.execute(null,project.projectDir).text.trim()
}

java {
	withSourcesJar()
}

publishing {
	repositories {
		maven {
			def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
			def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
			credentials {
				username = sonatypeUser
				password = sonatypePassword
			}
		}
	}
	publications {
		mavenJava(MavenPublication) {
			from components.java
			artifact(groovydocJar) {
				classifier = 'javadoc'
			}
			pom {
				name = 'disl'
				description = 'disl = data integration specific language. Goal of this project is to implement groovy based domain specific language supporting modelling of data integration projects. Disl will support data modeling and data mapping including support for MDA transformations and unit testing.'
				url = 'https://github.com/kaja78/disl'
				licenses {
					license {
						name = 'GNU GENERAL PUBLIC LICENSE, Version 3.0'
						url = 'http://www.gnu.org/licenses/gpl.txt'
						distribution = 'repo'
					}
				}
				developers {
					developer {
						name = 'Karel Hübl'
						email = 'karel.huebl@gmail.com'
						organization = 'Karel Hübl'
						organizationUrl = 'https://github.com/kaja78'
					}
				}
				issueManagement {
					system = 'Github'
					url = 'https://github.com/kaja78/disl/issues'
				}
				scm {
					connection = 'scm:git:git@github.com:kaja78/disl.git'
					developerConnection = 'scm:git:git@github.com:kaja78/disl.git'
					url = 'git:git@github.com:kaja78/disl.git'
				}
			}
		}
	}
}

//License plugin temporarily disabled due to https://github.com/hierynomus/license-gradle-plugin/issues/191
/*
license {
	header rootProject.file('HEADER.txt')
	ext.year = Calendar.getInstance().get(Calendar.YEAR)
	skipExistingHeaders = true
}*/